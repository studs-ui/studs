@use "../utilities" as *;


:host {
  display: inline-block;
  position: relative;
}

.button {
  --color:     var(--primary);
  --hover:     var(--primary-hover);
  --active:    var(--primary-active);
  --disabled:  var(--primary-disabled);
  --disabled-text:var(--text-disabled);

  --border: var(--color);
  --text: var(--text-inverted);;

  font-family: var(--font-family);
  font-size: calc(var(--font-size) * .975);
  font-weight: $font-semibold;

  background-color: var(--color);
  color: var(--text);
  border: none;
  outline: 2px solid $transparent;
  outline-offset: 2px;
  border-radius: var(--br-t-l, 0.25em)
                 var(--br-t-r, 0.25em)
                 var(--br-b-r, 0.25em)
                 var(--br-b-l, 0.25em);

  padding: 0.75em 1em;
  box-shadow: var(--interactive-shadow);
  cursor: pointer;

  display: flex;
  flex-direction: row;
  justify-content: space-between;
  align-items: center;
  gap: 0.5em;

  transition: all var(--transition-m);

  @include fontSizes;

  &.-cta {
   border-radius: 1.5em;

   &:disabled {
     --color: #{$transparent};
   }
  }


  &.-primary {
    --color:     var(--primary);
    --hover:     var(--primary-hover);
    --active:    var(--primary-active);
    --disabled:  var(--primary-disabled);

    &:disabled {
      --disabled-text: #{$white};
    }
  }

  &.-secondary {
    --color:     var(--secondary);
    --hover:     var(--secondary-hover);
    --active:    var(--secondary-active);
    --disabled:  var(--secondary-disabled);
  }

  &.-tertiary,
  &.-text {
    --border: transparent;
    --color: var(--text-color);
    --text: var(--color);

    border: none;
    border-radius: 0.125em;
    box-shadow: none;
    background-color: $transparent;

    // &:focus,
    &:focus-visible {
      --color: var(--primary-hover);
    }
  }

  &.-link {
    --text: var(--text-color);
    --border: var(--border-color-med);

    border: none;
    border-radius: 0.125em;
    box-shadow: none;
    background-color: $transparent;

    text-decoration: underline;
    text-decoration-color: var(--color);
    text-underline-offset: .25em;

    &:hover {
      --text: var(--primary-hover);
    }
  }

  &.-floating {
    --color: #{$white};
    --text: var(--text-color);
    border-radius: 1.5em;
    padding: .75em;

    &:hover {
      --text: var(--text-inverted);
    }
  }

  &.-icon {
    --color: var(--primary);
  }

  &.-close {
    padding: .325em;
    color: currentcolor;
    background-color: $transparent;
    border: 1px solid $transparent;
    border-radius: 50%;
    box-shadow: none;
    flex-direction: row-reverse;

    &:hover {
      border-color: var(--primary);
    }
    &:active {
      translate: 0 0;
      color: var(--active);
    }
  }

  &.-reverse {
    flex-direction: row-reverse;
  }

  &.-vertical {
    flex-direction: column;

    &.-reverse {
      flex-direction: column-reverse;
    }
  }

  &.-outline {
    --color: var(--tab-background);
    --border: var(--border-color);
    --text: var(--text-color);
    border: 1px solid var(--border);
    box-shadow: none;

    &.-primary {
      --border: var(--primary);
      --color: var(--tab-selected);
    }

    &:hover {
      --text: var(--primary);
      --color: var(--tab-border);
    }
  }


  &.-image {
    --imageSize: 1rem;

    flex-direction: column;
    align-items: center;
    justify-content: space-between;
    gap: .5em;
    padding: 0.5em;

    &.-small  { --imageSize: 0.75rem }
    &.-medium { --imageSize: 1rem }
    &.-large  { --imageSize: 2rem }

    ::slotted(img) {
      object-fit: cover;
      display: inline-block;
      aspect-ratio: 1 / 1;
      width: 100%;
      height: 100%;
      max-width: calc(var(--imageSize) * 5.75);
    }
  }


  &:hover {
    --color: var(--hover);
  }

  &:active {
    --color: var(--active);
    box-shadow: none;
    translate: 0 2px;
  }

  &:disabled {
    --color: var(--disabled);
    --text:  var(--disabled-text);
  }

  // &:focus,
  &:focus-visible {
    outline-color: var(--border);
  }
}
