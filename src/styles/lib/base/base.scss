@use '../vendor/normalize-min.css';
@use '../themes';
@use '../utilities/fonts';
@use '../utilities/colors';
@use '../utilities/variables';
@use '../utilities/mixins';
@use '../components' as component;

::selection {
  background-color: var(--cta, colors.colorVal('orange', 40));
  color: colors.$white;
}

html {
  --font-size: 16px; //@NOTE: for future functionality
  font-size: var(--font-size);

  @media (min-width: variables.$screen-sm) and (max-width: variables.$screen-lrg) {
    --font-size: 14px;
  }
  @include fonts.fonts;
  // @include mixins.scrollbars(var(--cta), var(--background), 12);
}

body {
  padding: 0;
  padding: env(safe-area-inset-top) env(safe-area-inset-right)
    env(safe-area-inset-bottom) env(safe-area-inset-left); //ios safe zone for notch

  font-family: fonts.$font-body;
}

.loading {
  @include component.loading;
}

.button {
  @include component.button;
}

.dropdown {
  @include component.dropdown;
}

.icon {
  @include component.icon;
}

.card {
  @include component.card;
}

.slider {
  @include component.slider;
}

.inputComponent {
  @include component.inputComponent;
}

.textareaComponent {
  @include component.textareaComponent;
}

.label {
  @include component.label;
}

.overlay {

  &.-tooltipOverlay {
    // @include component.tooltip;
  }

  &.-dropdownOverlay {
    width: 200px;
    // @include component.dropdownOverlay;
  }

  &.-contextMenu {
    @include component.contextMenu;
  }

  &.-modalOverlay {
    @include component.modal;
  }

  &.-backdropOverlay {
    @include component.backdrop;
  }

  &.-toastOverlay {
    @include component.toast;
  }

  &.-gridOperatorsOverlay {
    @include component.gridOperatorsOverlay;
  }
  &.-gridSearchValueOverlay {
    @include component.gridSearchValueOverlay;
  }
}
.radioButton {
  @include component.radioButton;
}
.checkbox {
  @include component.checkbox;
}
.chip {
  @include component.chip;
}

.table {
  @include component.table;
}

.grid {
  @include component.grid;
  @include component.skeletonLoader;
}

.anchor {
  @include component.anchor;
}
.breadcrumbs {
  @include component.breadcrumbs;
}
.formElement {
  @include component.formElement;
}
.badge {
  @include component.badge;
}

@include component.headings;

.list {
  @include component.list;
}

.spinner {
  @include component.spinner;
}

.lockedScroll {
  overflow: hidden;
}

.literatureCta {
  @include component.literatureCta;
}

.carousel {
  @include component.carousel;
}
.splide {
  @include component.splide_carousel;
}
.switch {
  @include component.switch;
}
.buttonGroup {
  @include component.buttonGroup;
}
.datePicker {
  @include component.datePicker;
}
.pagination {
  @include component.pagination;
}
.skeleton {
  @include component.skeleton;
}

.divider {
  @include component.divider;
}

.imageGallery {
  @include component.imageGallery;
}
.fileUpload {
  @include component.fileUpload;
}
.progressBar {
  @include component.progressBar;
}
.tab {
  @include component.tab;
}
/* Storybook overrides for display purposes only. */

#root-inner {
  > div {
    padding: 2rem;
  }
}
.innerZoomElementWrapper {
  > div > div {
    padding: 2rem;
  }
}

.sb-show-main {
  .card {
    max-width: 20rem;
  }
}
