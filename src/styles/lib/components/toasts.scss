@use '../utilities' as *;

@mixin toast {
  position: fixed;
  left: -2rem;
  top: 2rem;

  display: flex;
  flex-direction: column;
  width: max-content;
  max-width: $screen-sm;

  background-color: transparent;
  box-shadow: none;

  &.-reverse {
    flex-direction: column-reverse;
  }

  .card {
    --toast-text:   var(--info-color);
    --toast-bkg:    var(--info-bkg);
    --toast-shadow: var(--info-rgb);

    display: flex;
    flex-direction: row;
    justify-content: space-between;
    align-items: center;

    min-height: 50px;
    margin: .5rem 0;
    padding: 2rem;
    border-radius: .5rem;
    border: 2px solid var(--toast-text);
    border-left: 1rem solid var(--toast-text);

    box-shadow: 0 0 1rem rgba(var(--toast-shadow), 0.4);
    color: var(--toast-text);
    background: var(--toast-bkg);
    overflow: visible;
    position: relative;

    animation: fadeIn 0.5s ease-in-out;

    &.-error {
      --toast-text:   var(--error-color);
      --toast-bkg:    var(--error-bkg);
      --toast-shadow: var(--error-rgb);
    }

    &.-warning {
      --toast-text:   var(--warning-color);
      --toast-bkg:    var(--warning-bkg);
      --toast-shadow: var(--warning-rgb);
    }

    &.-info {
      --toast-text:   var(--info-color);
      --toast-bkg:    var(--info-bkg);
      --toast-shadow: var(--info-rgb);
    }

    &.-success {
      --toast-text:   var(--success-color);
      --toast-bkg:    var(--success-bkg);
      --toast-shadow: var(--success-rgb);
    }

    .content {
      margin-left: .5rem;
    }

    .closeButton {
      font-size: 1.35em;
      padding: .25em;
      background: var(--toast-bkg);
      border-radius: 50%;
      border: 2px solid var(--toast-text);
      position: absolute;
      top: calc(-0.5rem + -.25em);
      right: calc(-0.5rem + -.25em);

      &:hover {
        cursor: pointer;
      }
    }

    @keyframes fadeIn {
      from { opacity: 0 }
        to { opacity: 1 }
    }

    @keyframes fadeOut {
      from { opacity: 1 }
        to { opacity: 0 }
    }

    @keyframes slideFadeLeftIn {
      0% {
        transform: translateX(100%);
        opacity: 0;
      }
      100% {
        transform: translateX(0);
        opacity: 1;
      }
    }

    @keyframes slideFadeLeftOut {
      0% {
        transform: translateX(0);
        opacity: 1;
      }
      100% {
        transform: translateX(100%);
        opacity: 0;
      }
    }

    &.-fadeIn {
      animation: fadeIn 300ms ease-in-out forwards;
      animation-delay: 100ms;
      opacity: 0;
    }

    &.-fadeOut {
      animation: fadeOut 300ms ease-in-out forwards;
      animation-delay: 100ms;
      opacity: 1;
    }

    &.-slideFadeLeftIn {
      animation: slideFadeLeftIn 300ms ease-in-out forwards;
      animation-delay: 100ms;
      transform: translateX(100%);
      opacity: 0;
    }

    &.-slideFadeLeftOut {
      animation: slideFadeLeftOut 300ms ease-in-out forwards;
      animation-delay: 100ms;
      transform: translateX(0);
      opacity: 1;
    }
  }
}
